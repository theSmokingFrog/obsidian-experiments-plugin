import esbuild from "esbuild";
import process from "process";
import builtins from "builtin-modules";
import sveltePlugin from "esbuild-svelte";
import sveltePreprocess from "svelte-preprocess";
import { sassPlugin } from "esbuild-sass-plugin";

const banner = `/*
THIS IS A GENERATED/BUNDLED FILE BY ESBUILD
if you want to view the source, please visit the github repository of this plugin
*/
`;

const isProd = process.argv[2] === "production";

const contextConfig = {
	banner: {
		js: banner,
	},
	entryPoints: ["src/main.ts", "src/styles.scss"],
	bundle: true,
	external: ["obsidian", "electron", ...builtins],
	format: "cjs",
	target: "es2020",
	logLevel: "info",
	sourcemap: isProd ? false : "inline",
	treeShaking: true,
	minify: isProd,
	plugins: [
		sassPlugin(),
		sveltePlugin({
			compilerOptions: { css: "injected" },
			preprocess: sveltePreprocess(),
		}),
	],
	outdir: isProd ? "./" : process.env.OUTDIR,
};

if (isProd) {
	await esbuild.build(contextConfig).catch((x) => {
		if (x.errors) {
			console.error(x.errors);
		} else {
			console.error(x);
		}
		process.exit(1);
	});
} else {
	let ctx = await esbuild.context(contextConfig);
	await ctx.watch();
}
